// Preliminaries:
The android maven plugin needs at most maven <= 3.0.5

As IDE the Community Edition of Intellij is used. If Intellij shows errors for resources, its helpful to reset the
standard paths in the project structure for the wheelmap module

- File->Project Structure->Modules, pick the wheelmap module, in the Android-Subtab click on "Reset paths to Defaults"-Button

Android apklib maven dependencies cant be automatically included into Eclipse, and
Eclipse shows errors. Therefore its need to manually include apklib sources as
regular Android Library Projects. Look into the dependencies of the modules for the concrete apklibs.

For services, that are used by the app, you need either appropriate credentials or remove these
parts of the code.

The credentials are included via generated string resources. All you need is to put the right values
into the /wheelmap/credentials.properties file

These are the entries in the properties file:
mapbox.key=<mapbox_user>.map-<token>
wheelmap.common.apikey=<wheelmap_apikey_used_for_basic_trieval_and_tagging>
bugsense.key.testing=<bugsense_key_used_for_testing_profiles>
bugsense.key.production=<bugsense_key_used_for_the_production_profile>

In the top level directory
--------------------------

mvn clean package -P<build_profile>
    - compiles and builds in the wheelmap subdir
    - The default build configuration is develop, see the pom for details about its configuration
      Other build config profiles are available: staging, live, production

    - <x>-with/without-ga switches the googleanalytics on and off. Per default, no analytics is included
    - for a production build an alternative-signature is enforced - you need to also specify the alternative-signature profile

To sign the build with an alternative key than the debug key and to zipalign it use
mvn clean package -P <build_profile> \
    -Palternative-signature \
    -Dsign.keystore=<keystore-file> \
    -Dsign.alias=<alias> \
    -Dsign.storepass=<storepass> \
    -Dsign.keypass=<keypass>

Proguard (but only little tested) can be enabled during release with
    -Dproguard.disable=false
Proguard issues a lot of warnings because of "duplicate definition" of actionbarsherlock stuff. They can be ignored. Instrumentation-Tests in wheelmap-it will fail, as related classes in the wheelmap app are obfuscated by proguard. A release can be also build in the wheelmap subdirectory.

GoogleAnalytics can be enabled (and no dependency to it - so no related code is left)
with the property -Dwith-googleanalytics
Per default google analytics is disabled


In the subdirectory (module) wheelmap
-----------------------------
mvn package -P<profile>
  - compiles and builds
  - requires one of the profiles as in the parent directory

mvn android:deploy
  - the apk is installed on the available device

mvn android:run
  - the (installed) apk is executed on the available device

mvn license:update-file-header
  - an update of the copyright headers is done

mvn clean install ghDownloads:upload
  - uploads apk to github
  - needs a settings.xml with auth-information
    see: http://github.com/github/maven-plugins

In the subdirectory (module) wheelmap-it
-------------------------------
mvn integration-test -P<profile>
  - executes the instrumentation tests, the wheelmap.apk needs to be installed for that
  - requires one of the profiles as in the parent directory
